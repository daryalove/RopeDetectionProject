// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RopeDetection.Entities.Context;

namespace RopeDetection.Entities.Migrations.Model
{
    [DbContext(typeof(ModelContext))]
    [Migration("20201109090618_OriginalModel")]
    partial class OriginalModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0-rc.2.20475.6");

            modelBuilder.Entity("RopeDetection.Entities.Models.AnalysisHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnalysisResult")
                        .HasColumnType("int");

                    b.Property<string>("AnalysisType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FinishedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasAlternateKey("UserId");

                    b.HasIndex("ModelId");

                    b.ToTable("AnalysisHistories");
                });

            modelBuilder.Entity("RopeDetection.Entities.Models.AnalysisResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Characteristic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DownloadDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HistoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxScore")
                        .HasColumnType("int");

                    b.Property<string>("PredictedValue")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HistoryId")
                        .IsUnique();

                    b.ToTable("AnalysisResults");
                });

            modelBuilder.Entity("RopeDetection.Entities.Models.AnalyzedObject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Characteristic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DownloadedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Owner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TrainedModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasAlternateKey("UserId");

                    b.HasIndex("TrainedModelId");

                    b.ToTable("AnalyzedObjects");
                });

            modelBuilder.Entity("RopeDetection.Entities.Models.FileData", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("FileContent")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("FileIndex")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ParentCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ParentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("id");

                    b.HasAlternateKey("UserId");

                    b.HasIndex("FileIndex")
                        .IsUnique();

                    b.ToTable("FileDatas");
                });

            modelBuilder.Entity("RopeDetection.Entities.Models.Model", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Creator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LearningStatus")
                        .HasColumnType("bit");

                    b.Property<int>("Name")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasAlternateKey("UserId");

                    b.ToTable("Models");
                });

            modelBuilder.Entity("RopeDetection.Entities.Models.ModelAndObject", b =>
                {
                    b.Property<Guid>("ModelObjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ModelObjectId", "ModelId");

                    b.HasIndex("ModelId");

                    b.ToTable("ModelAndObjects");
                });

            modelBuilder.Entity("RopeDetection.Entities.Models.ModelObject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Characteristic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DownloadedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("TypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("ModelObjects");
                });

            modelBuilder.Entity("RopeDetection.Entities.Models.ModelObjectType", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("ModelObjectTypes");
                });

            modelBuilder.Entity("RopeDetection.Entities.Models.TrainedModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Creator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LearningStatus")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipPath")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ModelId")
                        .IsUnique()
                        .HasFilter("[ModelId] IS NOT NULL");

                    b.ToTable("TrainedModels");
                });

            modelBuilder.Entity("RopeDetection.Entities.Models.AnalysisHistory", b =>
                {
                    b.HasOne("RopeDetection.Entities.Models.Model", "Model")
                        .WithMany("AnalysisHistories")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Model");
                });

            modelBuilder.Entity("RopeDetection.Entities.Models.AnalysisResult", b =>
                {
                    b.HasOne("RopeDetection.Entities.Models.AnalysisHistory", "History")
                        .WithOne("analysisResult")
                        .HasForeignKey("RopeDetection.Entities.Models.AnalysisResult", "HistoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("History");
                });

            modelBuilder.Entity("RopeDetection.Entities.Models.AnalyzedObject", b =>
                {
                    b.HasOne("RopeDetection.Entities.Models.TrainedModel", "trainedModel")
                        .WithMany("AnalyzedObjects")
                        .HasForeignKey("TrainedModelId");

                    b.Navigation("trainedModel");
                });

            modelBuilder.Entity("RopeDetection.Entities.Models.ModelAndObject", b =>
                {
                    b.HasOne("RopeDetection.Entities.Models.Model", "Model")
                        .WithMany("ModelAndObjects")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RopeDetection.Entities.Models.ModelObject", "ModelObject")
                        .WithMany("ModelAndObjects")
                        .HasForeignKey("ModelObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Model");

                    b.Navigation("ModelObject");
                });

            modelBuilder.Entity("RopeDetection.Entities.Models.ModelObject", b =>
                {
                    b.HasOne("RopeDetection.Entities.Models.ModelObjectType", "ModelObjectType")
                        .WithMany("ModelObjects")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ModelObjectType");
                });

            modelBuilder.Entity("RopeDetection.Entities.Models.TrainedModel", b =>
                {
                    b.HasOne("RopeDetection.Entities.Models.Model", "Model")
                        .WithOne("TrainedModel")
                        .HasForeignKey("RopeDetection.Entities.Models.TrainedModel", "ModelId");

                    b.Navigation("Model");
                });

            modelBuilder.Entity("RopeDetection.Entities.Models.AnalysisHistory", b =>
                {
                    b.Navigation("analysisResult");
                });

            modelBuilder.Entity("RopeDetection.Entities.Models.Model", b =>
                {
                    b.Navigation("AnalysisHistories");

                    b.Navigation("ModelAndObjects");

                    b.Navigation("TrainedModel");
                });

            modelBuilder.Entity("RopeDetection.Entities.Models.ModelObject", b =>
                {
                    b.Navigation("ModelAndObjects");
                });

            modelBuilder.Entity("RopeDetection.Entities.Models.ModelObjectType", b =>
                {
                    b.Navigation("ModelObjects");
                });

            modelBuilder.Entity("RopeDetection.Entities.Models.TrainedModel", b =>
                {
                    b.Navigation("AnalyzedObjects");
                });
#pragma warning restore 612, 618
        }
    }
}
